# -*- mode: snippet; require-final-newline: nil -*-
# name: cohda-gobject-h
# key: cohda-gobject-h
# --
#ifndef __${1:`(replace-regexp-in-string "-" "_" (upcase (file-name-nondirectory (file-name-sans-extension (buffer-file-name)))))`}_H__
#define __$1_H__

#include <glib-object.h>

G_BEGIN_DECLS

${1:$(let* ((parts (split-string yas-text "_"))) (concat "#define " (first parts) "_TYPE_" (mapconcat 'identity (rest parts) "_")))} ($2_get_type())
#define $1(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ${1:$(let* ((parts (split-string yas-text "_"))) (concat (first parts) "_TYPE_" (mapconcat 'identity (rest parts) "_")))}, t$2))
#define ${1:$(let* ((parts (split-string yas-text "_"))) (concat (first parts) "_IS_" (mapconcat 'identity (rest parts) "_")))}(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ${1:$(let* ((parts (split-string yas-text "_"))) (concat (first parts) "_TYPE_" (mapconcat 'identity (rest parts) "_")))}))

typedef struct ${2:${1:$(apm-camelize yas-text)}}         t$2;
typedef struct $2Class    t$2Class;

GType $2_get_type(void);
t$2 *$2_New(void);

G_END_DECLS

#endif /* __$1_H__ */
